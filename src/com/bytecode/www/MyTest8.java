package com.bytecode.www;
/*
  现代JVM在执行Java代码的时候，通常都会将解释执行与编译执行二者结合起来进行
  所谓解释执行，就是通过解释器来读取字节码遇到相应的指令就去执行该指令
  编译执行，是通过即时编译器（Just in time，JIT）将字节码转换为
  本地机器码来执行。现代JVM会根据代码热点（使用频率高的代码）来生成相应本地机器码

  基于栈的指令集与基于寄存器指令集之间的关系：
  1）：JVM执行指令时所采取的方式是基于栈的指令集
  2）：基于栈的指令集主要的是操作有入栈与出栈两种
  3):基于栈的指令集的优势在于它可以在不同的平台之间移植，而基于寄存器的指令集与
  硬件架构紧密关联的，无法做到可移植
  4): 基于栈的指令集的缺点在于完成相同的操作，指令数量通常要比基于寄存器的指令集数量要多
  基于栈的指令集是在内存中完成操作的，而基于寄存器的指令集是直接由CPU来执行，它是在高速缓冲区
  中执行的，速度要快很多，虽然虚拟机可以采用一些优化手段，但总的来说，基于栈的指令集的执行要慢一些
 */
public class MyTest8 {

    public int myCalculate(){
        int a = 6;
        int b = 7;
        int c = 8;
        int d = 9;

        int result = (a + b - c) * d;

        return result;
    }
}
